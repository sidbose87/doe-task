<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>echo &quot;# Below commands are to prepare the system to execute the desired script and also to capture few details of server &quot;

cd /tmp
ls -lah
DIR=/tmp/doe-task						# This will be the working directory for the whole setup
if [ -d &quot;$DIR&quot; ]; then
  echo &quot;repositry exist&quot;
else
  git clone git@github.com:sidbose87/doe-task.git		# This step is clone the repo to working directory
  cd $DIR
  git checkout master &amp;&amp; git pull
  echo &quot;repository created and checked out to latest&quot;
fi

echo &quot;# Below script os_details.sh is to capture few details about the operating system.&quot;

echo &apos;#!/bin/bash&apos; &gt; os_details.sh
echo &apos;if [ -f /etc/os-release ]; then&apos; &gt;&gt; os_details.sh
echo &apos;    . /etc/os-release&apos; &gt;&gt; os_details.sh
echo &apos;    OS=$NAME&apos; &gt;&gt; os_details.sh
echo &apos;    VER=$VERSION_ID&apos; &gt;&gt; os_details.sh
echo &apos;elif type lsb_release &gt;/dev/null 2&gt;&amp;1; then&apos; &gt;&gt; os_details.sh
echo &apos;    OS=$(lsb_release -si)&apos; &gt;&gt; os_details.sh
echo &apos;    VER=$(lsb_release -sr)&apos; &gt;&gt; os_details.sh
echo &apos;elif [ -f /etc/lsb-release ]; then&apos; &gt;&gt; os_details.sh
echo &apos;    . /etc/lsb-release&apos; &gt;&gt; os_details.sh
echo &apos;    OS=$DISTRIB_ID&apos; &gt;&gt; os_details.sh
echo &apos;    VER=$DISTRIB_RELEASE&apos; &gt;&gt; os_details.sh
echo &apos;elif [ -f /etc/debian_version ]; then&apos; &gt;&gt; os_details.sh
echo &apos;    OS=Debian&apos; &gt;&gt; os_details.sh
echo &apos;    VER=$(cat /etc/debian_version)&apos; &gt;&gt; os_details.sh
echo &apos;elif [ -f /etc/redhat-release ]; then&apos; &gt;&gt; os_details.sh
echo &apos;    OS=RedHat&apos; &gt;&gt; os_details.sh
echo &apos;    VER=$(cat /etc/redhat-release)&apos; &gt;&gt; os_details.sh
echo &apos;else&apos; &gt;&gt; os_details.sh
echo &apos;    # For all other versions&apos; &gt;&gt; os_details.sh
echo &apos;    OS=$(uname -s)&apos; &gt;&gt; os_details.sh
echo &apos;    VER=$(uname -r)&apos; &gt;&gt; os_details.sh
echo &apos;fi&apos; &gt;&gt; os_details.sh

echo &apos;case $(uname -m) in&apos; &gt;&gt; os_details.sh
echo &apos;x86_64)&apos; &gt;&gt; os_details.sh
echo &apos;    BITS=64&apos; &gt;&gt; os_details.sh
echo &apos;    ;;&apos; &gt;&gt; os_details.sh
echo &apos;i*86)&apos; &gt;&gt; os_details.sh
echo &apos;    BITS=32&apos; &gt;&gt; os_details.sh
echo &apos;    ;;&apos; &gt;&gt; os_details.sh
echo &apos;*)&apos; &gt;&gt; os_details.sh
echo &apos;    BITS=?&apos; &gt;&gt; os_details.sh
echo &apos;    ;;&apos; &gt;&gt; os_details.sh
echo &apos;esac&apos; &gt;&gt; os_details.sh

echo &apos;echo &quot;OS, VERSION, BIT-VERSION&quot; &gt; /tmp/os_details.csv&apos; &gt;&gt; os_details.sh
echo &apos;echo &quot;$OS, $VER, $BITS&quot; &gt;&gt; /tmp/os_details.csv&apos; &gt;&gt; os_details.sh

chmod 755 os_details.sh

./os_details.sh

cat /tmp/os_details.csv

echo &quot;# Below commands needs to be executed with sudo permissions to create a named user, for script to run in next phase.&quot;

sudo useradd -m log-user 2&gt;/tmp/jenkins-error
sudo mkdir /home/log-user/jenkins-scripts 2&gt;/tmp/jenkins-error
sudo chmod -R o+rx /home/log-user/ 2&gt;/tmp/jenkins-error
sudo chmod -R o+wx /home/log-user/jenkins-scripts/ 2&gt;/tmp/jenkins-error

echo &quot;# Below command prepares for letting log-user run the next script as a service or daemon.&quot;

sudo mkdir -p /home/log-user/.config/systemd/log-user/ 2&gt;/tmp/jenkins-error
sudo chmod -R o+rx /home/log-user/.config/systemd/ 2&gt;/tmp/jenkins-error
sudo chmod -R o+wx /home/log-user/.config/systemd/log-user/ 2&gt;/tmp/jenkins-error
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.BuildTrigger>
      <childProjects>linux/doe-pr02</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </hudson.tasks.BuildTrigger>
  </publishers>
  <buildWrappers/>
</project>